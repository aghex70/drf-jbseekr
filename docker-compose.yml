version: '3'

services:
  db:
    image: postgres
    env_file:
      - .env.jbseekr
    volumes:
      - /var/lib/postgresql/data/jbseekr:/var/lib/postgresql/data
  frontend:
    build: ./frontend
    command: ["npm", "start"]
    volumes:
      - ./frontend:/frontend
      - node-modules:/frontend/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - db
  web:
    build: ./backend
    env_file:
      - .env.jbseekr
    command: bash -c "python backend/scripts/check_service.py --service-name db --ip db --port 5432 &&
      python backend/manage.py makemigrations &&
      python backend/manage.py migrate &&
      python backend/manage.py runserver 0.0.0.0:8000  &&
      python backend/manage.py get_new_offers &&
      python backend/get_new_offers.py"
    volumes:
      - .:/backend
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
#      - elasticsearch
      - flower
  redis:
    image: redis:alpine
  celery:
#    image: celery:latest
    build: ./backend
    env_file:
      - .env.jbseekr
    command: >
      bash -c "celery worker -A jbseekr.celery -n jbseekr@ -Q seeker -l info --heartbeat-interval 10"
    volumes:
      - .:/usr/src/app/
    depends_on:
      - db
      - redis
  flower:
    image: flower:latest
    env_file:
      - .env.jbseekr
    command: ["flower", "--broker=redis://redis:6379/0", "--port=5555"]
    depends_on:
      - redis
    ports:
      - "5555:5555"
#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.0
#    environment:
#      - discovery.type=single-node
#    ports:
#      - "9200:9200"
#      - "9300:9300"
volumes:
  node-modules: